C语言结构体解析

总的概括：数据类型不同，但是它们都表示一个整体，那么我们就需要一个新的数据类型-结构体

1、我们先来一个例子进行展示说明：for example：
struct book
{
    char title[maxtitl];  一个字符串表示标题title
    char author[maxtitl]; 一个字符串表示作者author
    float value;          一个浮点数表示书的价格
};注意分号不能少

以上解释：
struct声明接下来你将定义一个结构体，然后book是结构体的标记（可以省略），里面定义了一些成员，最后以;结束，
最后的;是不能省略的！

2、结构体的作用域：
（1）如果在函数外部，那么本文件其他函数都可用
（2）如果在函数内部，只是本函数内部能够使用

3、使用typedef->作用就是将一个old结构体从新命名为新的结构体名称
比如：当我们在声明一个结构体的时候，为了防止结构体的标记名词规范等，我们
使用typedef来为它取一个别名，方便操作：
typedef struct Student
{
int ...
}stu
这样我们就能够使用stu进行操作Student

4、结构体的初始化操作
1）首先我们去定义一个结构体
struct stu
{
    char name[20];
    int age;
};

int main()
{
    struct stu stu_obj = {"刘柱", 10};  //初始化操作
    printf("%s\n%d\n", stu_obj.name,stu_obj.age)
    return 0;
}















